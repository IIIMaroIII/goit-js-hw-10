{"version":3,"file":"commonHelpers.js","sources":["../src/img/hello.svg","../src/scripts/convertMs.js","../src/js/1-timer.js"],"sourcesContent":["export default \"__VITE_ASSET__37883dd9__\"","export default function convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n","import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iconError from '../img/error.svg';\nimport iconSuccess from '../img/ok.svg';\nimport iconHello from '../img/hello.svg';\nimport iconCaution from '../img/caution.svg';\nimport showNotification from '../scripts/showNotification_iziToast';\nimport convertMs from '../scripts/convertMs';\n\nlet intervalId = 0;\nlet userSelectedDate;\nlet timeDiff = 0;\nlet timeObj;\n\n//Object refs - is the list of links\n\nconst refs = {\n  input: document.querySelector('input#datetime-picker'),\n  startBtn: document.querySelector('[data-start]'),\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n  spanValues: document.querySelectorAll('div.field > span.value'),\n};\n\nclass Timer {\n  constructor(updateTimerDisplay) {\n    this.updateTimerDisplay = updateTimerDisplay;\n    this.intervalId = intervalId;\n  }\n\n  // Method start() starts Timer after the date has been choosen.\n\n  start() {\n    intervalId = setInterval(() => {\n      timeDiff -= 1000;\n      timeObj = convertMs(timeDiff);\n      const allEqualZero = Object.values(timeObj).every(value => value === 0);\n      if (allEqualZero) {\n        this.stop();\n      }\n      this.updateTimerDisplay(timeObj);\n    }, 1000);\n    showNotification(\n      'Success!',\n      'The timer`s been started!',\n      '#59a10d',\n      iconSuccess\n    );\n    refs.startBtn.setAttribute('disabled', true);\n  }\n\n  // Method validateTime() is checking the date has been choosen correctly (not in the future).\n\n  validateTime(userSelectedDate) {\n    timeDiff = userSelectedDate - options.defaultDate.getTime();\n    if (timeDiff <= 0) {\n      refs.startBtn.setAttribute('disabled', true);\n      showNotification(\n        'Error!',\n        'Please choose a date in the future',\n        'rgba(239, 64, 64, 1)',\n        iconError\n      );\n    } else {\n      refs.startBtn.removeAttribute('disabled');\n    }\n  }\n\n  // Method stop() stops the timer when the time has been up.\n\n  stop() {\n    clearInterval(intervalId);\n    showNotification(\n      'Finished',\n      'Time`s up!',\n      'rgba(0, 153, 255, 1)',\n      iconHello\n    );\n  }\n}\n\nconst timer = new Timer(updateTimerDisplay);\n\n// Object options is the set of flatpickr`s options.\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0].getTime();\n    timer.validateTime(userSelectedDate);\n  },\n};\n\nrefs.startBtn.addEventListener('click', onStartBtn);\n\nflatpickr(refs.input, options);\n\n// Function updateTimerDisplay() displays the exact time which has been left.\n\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n  refs.days.textContent = addZero(days);\n  refs.hours.textContent = addZero(hours);\n  refs.minutes.textContent = addZero(minutes);\n  refs.seconds.textContent = addZero(seconds);\n}\n\n// Function onStartBtn() processes the event on button submit.\n\nfunction onStartBtn(e) {\n  timer.start();\n}\n\n// Function addZero() adds the symbol '0' in the beginning if it needs to be added.\n\nfunction addZero(num) {\n  return num.toString().padStart(2, '0');\n}\n"],"names":["iconHello","convertMs","ms","days","hours","minutes","seconds","intervalId","userSelectedDate","timeDiff","timeObj","refs","Timer","updateTimerDisplay","value","showNotification","iconSuccess","options","iconError","timer","selectedDates","onStartBtn","flatpickr","addZero","e","num"],"mappings":"iIAAA,MAAeA,EAAA,2CCAA,SAASC,EAAUC,EAAI,CAQpC,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CCRA,IAAIC,EAAa,EACbC,EACAC,EAAW,EACXC,EAIJ,MAAMC,EAAO,CACX,MAAO,SAAS,cAAc,uBAAuB,EACrD,SAAU,SAAS,cAAc,cAAc,EAC/C,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,EAChD,WAAY,SAAS,iBAAiB,wBAAwB,CAChE,EAEA,MAAMC,CAAM,CACV,YAAYC,EAAoB,CAC9B,KAAK,mBAAqBA,EAC1B,KAAK,WAAaN,CACnB,CAID,OAAQ,CACNA,EAAa,YAAY,IAAM,CAC7BE,GAAY,IACZC,EAAUT,EAAUQ,CAAQ,EACP,OAAO,OAAOC,CAAO,EAAE,MAAMI,GAASA,IAAU,CAAC,GAEpE,KAAK,KAAI,EAEX,KAAK,mBAAmBJ,CAAO,CAChC,EAAE,GAAI,EACPK,EACE,WACA,4BACA,UACAC,CACN,EACIL,EAAK,SAAS,aAAa,WAAY,EAAI,CAC5C,CAID,aAAaH,EAAkB,CAC7BC,EAAWD,EAAmBS,EAAQ,YAAY,QAAO,EACrDR,GAAY,GACdE,EAAK,SAAS,aAAa,WAAY,EAAI,EAC3CI,EACE,SACA,qCACA,uBACAG,CACR,GAEMP,EAAK,SAAS,gBAAgB,UAAU,CAE3C,CAID,MAAO,CACL,cAAcJ,CAAU,EACxBQ,EACE,WACA,aACA,uBACAf,CACN,CACG,CACH,CAEA,MAAMmB,EAAQ,IAAIP,EAAMC,CAAkB,EAIpCI,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQG,EAAe,CACrBZ,EAAmBY,EAAc,CAAC,EAAE,QAAO,EAC3CD,EAAM,aAAaX,CAAgB,CACpC,CACH,EAEAG,EAAK,SAAS,iBAAiB,QAASU,CAAU,EAElDC,EAAUX,EAAK,MAAOM,CAAO,EAI7B,SAASJ,EAAmB,CAAE,KAAAV,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7DK,EAAK,KAAK,YAAcY,EAAQpB,CAAI,EACpCQ,EAAK,MAAM,YAAcY,EAAQnB,CAAK,EACtCO,EAAK,QAAQ,YAAcY,EAAQlB,CAAO,EAC1CM,EAAK,QAAQ,YAAcY,EAAQjB,CAAO,CAC5C,CAIA,SAASe,EAAWG,EAAG,CACrBL,EAAM,MAAK,CACb,CAIA,SAASI,EAAQE,EAAK,CACpB,OAAOA,EAAI,SAAU,EAAC,SAAS,EAAG,GAAG,CACvC"}