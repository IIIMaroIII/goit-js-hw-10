{"version":3,"file":"commonHelpers.js","sources":["../src/img/error.svg","../src/img/ok.svg","../src/img/hello.svg","../src/js/1-timer.js"],"sourcesContent":["export default \"__VITE_ASSET__8479b7dd__\"","export default \"__VITE_ASSET__8517b2d7__\"","export default \"__VITE_ASSET__37883dd9__\"","import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iconError from '../img/error.svg';\nimport iconSuccess from '../img/ok.svg';\nimport iconHello from '../img/hello.svg';\nimport iconCaution from '../img/caution.svg';\nimport showNotification from '../scripts/showNotification_iziToast';\n\nlet intervalId = 0;\nlet userSelectedDate;\nlet timeDiff = 0;\nlet timeObj;\n\n//Object refs - is the list of links\n\nconst refs = {\n  input: document.querySelector('input#datetime-picker'),\n  startBtn: document.querySelector('[data-start]'),\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n  spanValues: document.querySelectorAll('div.field > span.value'),\n};\nrefs.startBtn.setAttribute('disabled', true);\n\nrefs.startBtn.addEventListener('click', onStartBtn);\n\nfunction onStartBtn(e) {\n  timer.start();\n}\n\nclass Timer {\n  constructor() {\n    this.notificationTimerStarted = {\n      title: 'Success!',\n      message: 'The timer`s been started!',\n      color: '#59a10d',\n      icon: iconSuccess,\n    };\n    this.notificationDateInThePast = {\n      title: 'Error!',\n      message: 'Please choose a date in the future',\n      color: 'rgba(239, 64, 64, 1)',\n      icon: iconError,\n    };\n    this.notificationTimeIsUp = {\n      title: 'Finished',\n      message: 'Time`s up!',\n      color: 'rgba(0, 153, 255, 1)',\n      icon: iconHello,\n    };\n    this.intervalId = intervalId;\n  }\n\n  // Method start() starts Timer after the date has been choosen.\n\n  start() {\n    intervalId = setInterval(() => {\n      timeDiff -= 1000;\n      timeObj = this.convertMs(timeDiff);\n      const allEqualZero = Object.values(timeObj).every(value => value === 0);\n      if (allEqualZero) {\n        this.stop();\n      }\n      this.updateTimerDisplay(timeObj);\n    }, 1000);\n    showNotification(this.notificationTimerStarted);\n    refs.startBtn.setAttribute('disabled', true);\n  }\n\n  // Method validateTime() is checking the date has been choosen correctly (not in the future).\n\n  validateTime(userSelectedDate) {\n    timeDiff = userSelectedDate - options.defaultDate.getTime();\n    if (timeDiff <= 0) {\n      refs.startBtn.setAttribute('disabled', true);\n      showNotification(this.notificationDateInThePast);\n    } else {\n      refs.startBtn.removeAttribute('disabled');\n    }\n  }\n\n  // Method stop() stops the timer when the time has been up.\n\n  stop() {\n    clearInterval(intervalId);\n    showNotification(this.notificationTimeIsUp);\n  }\n  // Function updateTimerDisplay() displays the exact time which has been left.\n\n  updateTimerDisplay({ days, hours, minutes, seconds }) {\n    refs.days.textContent = this.addZero(days);\n    refs.hours.textContent = this.addZero(hours);\n    refs.minutes.textContent = this.addZero(minutes);\n    refs.seconds.textContent = this.addZero(seconds);\n  }\n\n  // Function addZero() adds the symbol '0' in the beginning if it needs to be added.\n\n  addZero(num) {\n    return num.toString().padStart(2, '0');\n  }\n  // convertMs(ms) converts MS to object (days,hours,minutes,seconds)\n  convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n  }\n}\n\nconst timer = new Timer();\n\n// Object options is the set of flatpickr`s options.\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0].getTime();\n    timer.validateTime(userSelectedDate);\n  },\n};\n\nflatpickr(refs.input, options);\n\n// Function onStartBtn() processes the event on button submit.\n"],"names":["iconError","iconSuccess","iconHello","intervalId","userSelectedDate","timeDiff","timeObj","refs","onStartBtn","e","timer","Timer","value","showNotification","options","days","hours","minutes","seconds","num","ms","selectedDates","flatpickr"],"mappings":"mHAAA,MAAeA,EAAA,2CCAAC,EAAA,wCCAAC,EAAA,2CCQf,IAAIC,EAAa,EACbC,EACAC,EAAW,EACXC,EAIJ,MAAMC,EAAO,CACX,MAAO,SAAS,cAAc,uBAAuB,EACrD,SAAU,SAAS,cAAc,cAAc,EAC/C,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,EAChD,WAAY,SAAS,iBAAiB,wBAAwB,CAChE,EACAA,EAAK,SAAS,aAAa,WAAY,EAAI,EAE3CA,EAAK,SAAS,iBAAiB,QAASC,CAAU,EAElD,SAASA,EAAWC,EAAG,CACrBC,EAAM,MAAK,CACb,CAEA,MAAMC,CAAM,CACV,aAAc,CACZ,KAAK,yBAA2B,CAC9B,MAAO,WACP,QAAS,4BACT,MAAO,UACP,KAAMV,CACZ,EACI,KAAK,0BAA4B,CAC/B,MAAO,SACP,QAAS,qCACT,MAAO,uBACP,KAAMD,CACZ,EACI,KAAK,qBAAuB,CAC1B,MAAO,WACP,QAAS,aACT,MAAO,uBACP,KAAME,CACZ,EACI,KAAK,WAAaC,CACnB,CAID,OAAQ,CACNA,EAAa,YAAY,IAAM,CAC7BE,GAAY,IACZC,EAAU,KAAK,UAAUD,CAAQ,EACZ,OAAO,OAAOC,CAAO,EAAE,MAAMM,GAASA,IAAU,CAAC,GAEpE,KAAK,KAAI,EAEX,KAAK,mBAAmBN,CAAO,CAChC,EAAE,GAAI,EACPO,EAAiB,KAAK,wBAAwB,EAC9CN,EAAK,SAAS,aAAa,WAAY,EAAI,CAC5C,CAID,aAAaH,EAAkB,CAC7BC,EAAWD,EAAmBU,EAAQ,YAAY,QAAO,EACrDT,GAAY,GACdE,EAAK,SAAS,aAAa,WAAY,EAAI,EAC3CM,EAAiB,KAAK,yBAAyB,GAE/CN,EAAK,SAAS,gBAAgB,UAAU,CAE3C,CAID,MAAO,CACL,cAAcJ,CAAU,EACxBU,EAAiB,KAAK,oBAAoB,CAC3C,CAGD,mBAAmB,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACpDX,EAAK,KAAK,YAAc,KAAK,QAAQQ,CAAI,EACzCR,EAAK,MAAM,YAAc,KAAK,QAAQS,CAAK,EAC3CT,EAAK,QAAQ,YAAc,KAAK,QAAQU,CAAO,EAC/CV,EAAK,QAAQ,YAAc,KAAK,QAAQW,CAAO,CAChD,CAID,QAAQC,EAAK,CACX,OAAOA,EAAI,SAAU,EAAC,SAAS,EAAG,GAAG,CACtC,CAED,UAAUC,EAAI,CAQZ,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAE1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EAEpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EAEjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CACH,CAEA,MAAMR,EAAQ,IAAIC,EAIZG,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQO,EAAe,CACrBjB,EAAmBiB,EAAc,CAAC,EAAE,QAAO,EAC3CX,EAAM,aAAaN,CAAgB,CACpC,CACH,EAEAkB,EAAUf,EAAK,MAAOO,CAAO"}